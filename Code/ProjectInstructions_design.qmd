---
title: "Data Science Applied to Ag - Final Project - Design"
author: "Madhuparna Deb"
format:
  html:
    code-fold: false
    embed-resources: true
    toc: true
    number-sections: true
    theme: cerulean
---

# Instructions  
This file contains both the **instructions** for the mid-term project and placeholders for your code. You are required to use this file to produce code, output, and answers to the questions below.  

Besides simply creating output, make sure to interpret the output. You will need to create tables and/or plots to arrive at the answers, and then comment on what you found below it.    

To get you setup, you will need to:  

  - Student #1: create a repository on your GitHub account. You can call this repository "2025dsa_finalproject_groupX", **where X is the number of your group**. Make it public, add a README, add a .gitignore for R.  
  - Student #1: follow the steps we did in class to start a new RStudio project with version control.  
  - Student #1: in your computer, create the sub-folders code, data, output, and move your data set into the `data` folder. Also, student 1 moves this current script into the `code` folder. Do a git stage, commit, push.  
  - Student #1: on GitHub, go the repository settings and invite your partner to be a collaborator in the repository. That will give them push permission.  
  - Now, both students should clone this repository on their computers like we did in class. Make sure this step works well and that you can pull and push from GitHub.  
  - Student 2, after cloning, does a git pull to get all these updates on their computer.  
  - Student 1 and 2 work together to update the README file. README files should explain what the repository is about, the goals of that project, who is working in it, and any other important details you may find.  
  
# Introduction  
Describe here the introduction of your problem. Consider this as a shortened version of your paper, where you will briefly discuss in 3-4 paragraphs what is the issue/gap in literature, and how the data you collected will help answer this gap.  
Fruit juices have become an essential commodity in the global market. United States is one of the highest fruit juice consumption countries, with a per capita consumption rate of 18.08 liters. Fruit juices normally contain antioxidants and flavonoids which play an important role in preventing different diseases in humans. In addition to that, fruit juices also contain nutrients that support the growth of acid tolerant microorganisms. Fruits naturally consist of a microflora on the surface of the fruit from post-harvest operations. Fruit juices usually have a pH ranging < 4.5 which acts as a barrier to microbial growth, but few food borne pathogens like E. coli and L. monocytogenes manage to survive because of their acid stress response. These microorganisms can survive in the acidic environment for several days or even weeks by altering the internal pH.
    Gram-negative bacteria are pressure resistant than gram-positive bacterias. Previous studies have found that E. coli and L. monocytogenes are pressure resistant strains. There are studies that have shown that organic acids along with non-thermal/thermal technologies have a synergistic effect on the inhibition of food-borne pathogens. High pressure processing has emerged as a promising technology for microbial inactivation and maintaining the nutritional and sensorial properties of the food. HPP have a market size of $333.9 million and is expected to reach $1.1 billion (about $3 per person in the US) by 2033 in the United States.
  The research study aims to study the effect of pressure, treatment time, pH, and type of organic acid in acidified juices on the inactivation of Escherichia coli O157:H7 and Listeria monocytogenes. The inactivation kinetics will be evaluated using mathematical modeling.
  
# Hypothesis and objectives  
Describe here your hypothesis, followed by your objectives. Make sure your hypothesis are testable and bold, and objectives are clear.  

The central hypothesis of our study revolves around the idea that a combination effect of both organic acid and high-pressure processing will have synergistic effect on the inactivation of the acid and pressure resistant bacteria. We predict that different organic acids at different concentrations along with HPP (500-700 MPa) with holding times of up to 1 minutes will help us achieve a 5-log reduction of L. monocytogenes and E. coli. 
    The hypothesis is rooted in the understanding that organic acids are antimicrobial in nature and are the second most abundant soluble solids in fruits and vegetables, and establishing the relationship of organic acid with high pressure will help us with the inactivation of the food borne pathogens enhanced with acids naturally present in juices. In addition to this, HPP is considered green technology and has a record of extending shelf life by reducing pathogens and spoilage organisms. It also maintains the nutritional properties better than traditional thermal processing and foods processed with HPP retain the nutritional and organoleptic qualities of fruit juice thereby meeting the rising demands of the minimally processed and enhanced organoleptic properties of fruit juices by the consumers. 
      We also hypothesize that Weibull  model is going to give a better fit in terms of Akaike Information Criterion (AICc) and describe the inactivation kinetics more accurately than a log- linear model as several studies are evident that Weibull distribution model is the most flexible yet simple model to describe the non-linear microbial inactivation by non-thermal processing methods. The effects of pressure and pH for each acidifier can be precisely incorporated into the microbial inactivation process model. We particularly predict that differences in pressure and pH will have significant effects on the effectiveness of microbial inactivation, as well as that we will find different correlations between these factors and microbial reduction rates for every acidifier through developing and statistically analyzing a suitable secondary model. Furthermore, we anticipate that when compared to current models, the secondary model would show higher predictive possibility, providing greater understanding and better optimization of microbial inactivation processes.


# Material and Methods  
Describe here your overall material and methods as it pertains to the analysis you will conduct, including study description, site/setup description, what equipment was used, etc. just like you would in a paper. Make sure to clearly explain what was measured and how.

A model solution system prepared by combining sterile Tryptic soy broth (TSB) with three different types of organic acid (Citric, Malic and Ascorbic acid) and adjusting the pH to 3.5, 4.0 and 4.5 to simulate the acidity of natural fruit juices. The solutions were aliquoted into sterile 2 ml vials after inoculation and sealed to prevent contamination during high pressure processing (HPP). Five Listeria monocytogenes strains, selected based on recent outbreak history, serotype diversity, and relevance to acidic produce, were cultured individually and combined into 5-strain cocktail. A total of 45ml of model juice was inoculated with 5 ml of the cocktail to achieve a target concentration of 8-9 log CFU/ml. About 2 ml of this inoculated solution was transferred into sterile 3 ml luer lock syringes and subjected to HPP at ambient temperature (22°C) using a laboratory scale HPP system ((Unipress Equipment, Warsaw, Poland) with varying pressure (500-700 MPa) and time combinations to achieve at least a 5-log reduction. Each condition was independently replicated three times. Post treatment, samples were serially diluted in 0.1 % sterile peptone water, spread plated on TSA and incubated at 37°C for 48  2h. Colonies (25 – 250 per plate) were enumerated and expressed as log CFU/ml. Survival data were analyzed using the n-way ANOVA function in MATLAB 2024b, with pressure, time and pH as continuous variables, and acid type as a categorical variable. Interaction effects among parameters were evaluated and statistical significance was set at  = 0.05.

## Study design  
Clearly describe your study design here, including treatment design (which factors and levels, the hierarchy among them, etc.), and your experimental design (number of reps/blocks, how was randomization performed, etc.), as we talked about in class.  

The goal of this study is to assess how multiple factors—Organism type, Pressure, pH, and Acid type—affect microbial inactivation, which is measured by D-values, using High Pressure Processing (HPP). This study focuses on two pathogens transmitted by food: Listeria monocytogenes and Escherichia coli.

Design Type: Full factorial (2 × 3 × 3 × 3 = 54 treatment combinations)
Replication: Each treatment combination was replicated three times, resulting in a total of 162 observations.
Randomization: Treatments were randomized within each replicate to minimize systematic bias and environmental variation. Randomization was performed using a computer-generated random sequence in Excel


## Statistical analysis  
Describe here your statistical analysis, including what type of ANOVA model you ran (based on the design above), what was your response variable, what were your explanatory variables and how were the explanatory variables treated (random or fixed). Provide your alpha level. Explain which function from which package you used to analyze this data. Explain how you checked linear model assumptions and whether or not they were met. Overall, make sure you explain in sufficient detail that, if given your data, a knowledgeable person would be able to reproduce your analysis exactly.  

A multi-factorial ANOVA model was used to assess the effect of four explanatory variables—Organism, Pressure, pH, and Acid Type—on microbial inactivation, measured by D-values.

Response Variable:
D_value (Decimal reduction time), a continuous variable.


Variable | Type                            | Levels      | Treated As
Organism | Categorical |                Listeria, E. coli    | Fixed |
Pressure | Continuous  (500, 600, 700 MPa) | Fixed | 
pH       | Continuous (3.5, 4.0, 4.5)      | Fixed | 
Acid     | Categorical |                   |MA, CA, AA|       | Fixed |
All explanatory variables were considered fixed effects, since they were specifically chosen and are of direct interest in the study, rather than being randomly sampled from a larger population.
The significance level was set at α = 0.05 for all statistical tests.

R Packages and Functions Used
Base R:
aov() for ANOVA
lm() for linear model fitting
car package:
Anova() from the car package was used for Type III sums of squares (when needed)
ggplot2: For residual diagnostics and interaction plots
emmeans: For post hoc pairwise comparisons and estimated marginal means
emmeans()

Model: model <- lm(D_value ~ Organism * Pressure + Organism * pH + Organism * Acid + Pressure * pH * Acid, data = mydata)
 **Pressure and pH were treated as numeric variables**
Checking Model Assumptions:
Assumptions were assessed using both visual and statistical methods:

Linearity and Homoscedasticity (equal variances) were checked via Residuals vs Fitted plot.
Normality of residuals were checked using Q-Q plot
Independence of residuals were ensured through proper randomization of treatments.
Residual plots were also used to detect any trends.
Multicollinearity (since we are treating Pressure & pH as numeric) were checked using car::vif(model)

**All analyses were performed in R version [ Version 2024.12.1+563 (2024.12.1+563)]. A reproducible R script was written with all steps documented, including data import, cleaning, model fitting, diagnostics, and visualizations.**

# Results  
Here is where the coding is going to happen, and it will be completely up to you. Include under this section as many sub-sections (using ##) and as many chunks needed to create the analytical workflow for your analysis, starting at loading packages and data, wrangling, EDA, modeling, assumptions checking, ANOVA table, means, pairwise comparisons, and final publication-quality plot.

##Loading Required Packages

```{r}
install.packages(minpack.lm)
library(minpack.lm)
library(readxl) # for loading data
library(tidyverse)     # For data manipulation and visualization
library(ggplot2)       # For plotting (also in tidyverse)
library(car)           # For ANOVA assumption checks
library(emmeans)       # For estimated marginal means and pairwise comparisons
library(readr)         # For reading in CSV files
library(broom)         # For tidying model outputs
library(ggpubr)        # For  plots
```

##Load and Inspect Data

```{r}
 hpp_data<- read_excel("../Data/Data_MD.xlsx")

View(hpp_data)
glimpse (hpp_data)
```

## Convert necessary columns to factors

```{r}
data <- hpp_data %>%
  
  mutate(
    Organism = factor(Organism),
    Pressure = factor(Pressure),
    pH = factor(pH),
    Acid = factor(Acid),
    Rep = factor(Rep) # Replicates as a factor
  )
# Check for any missing values
sum(is.na(data))

# Preview cleaned data
head(data)
```

```{r}
glimpse(data)
```

##summary

```{r}
data %>%
  group_by(Organism, Pressure, pH, Acid) %>%
  summarise(
    mean_D = mean(Response, na.rm = TRUE),
    sd_D = sd(Response, na.rm = TRUE),
    n = n()
  ) %>%
  arrange(desc(mean_D))
```
#Boxplots to visualize distribution of Response

```{r}
ggplot(data, aes(x = Organism, y = Response, fill = Organism)) +
  geom_boxplot() +
  labs(title = "D-values by Organism") +
  theme_minimal()

# D-values by Pressure

ggplot(data, aes(x = Pressure, y = Response, fill = Pressure)) +
  geom_boxplot() +
  labs(title = "D-values by Pressure") +
  theme_minimal()

# D-values by pH
ggplot(data, aes(x = pH, y = Response, fill = pH)) +
  geom_boxplot() +
  labs(title = "D-values by pH") +
  theme_minimal()

# D-values by Acid
ggplot(data, aes(x = Acid, y = Response, fill = Acid)) +
  geom_boxplot() +
  labs(title = "D-values by Acid") +
  theme_minimal()


```

##Pivot data longer to use facets
```{r}
data_long <- data %>%
  pivot_longer(cols = c(Organism, Pressure, pH, Acid),
               names_to = "Factor",
               values_to = "Level")

# Create a faceted boxplot
ggplot(data_long, aes(x = Level, y = Response, fill = Level)) +
  geom_boxplot() +
  facet_wrap(~ Factor, scales = "free_x") +
  labs(title = "D-values by Experimental Factors",
       x = "Factor Levels", y = "Response") +
  theme_minimal() +
  theme(legend.position = "none")
```


```{r}
# Create a combined factor for all conditions
data <- data %>%
  mutate(Combo = interaction(Organism, Pressure, pH, Acid, sep = "_"))

# Plot
ggplot(data, aes(x = Combo, y = Response, fill = Organism)) +
  geom_boxplot() +
  labs(title = "D-values by Combined Experimental Conditions",
       x = "Experimental Condition",
       y = "Response") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

```

##Primary Model fiting
```{r}
# Linear model with all main effects
lm_model <- lm(Response ~ Organism + Pressure + pH + Acid, data = data)

lm_model
# Summary of linear model
summary(lm_model)
```

#Weibull model fitting
```{r}
data_model <- data %>%
  filter(!is.na(Response), Response > 0) %>%
  # Convert Pressure to numeric
  mutate(
    Pressure_numeric = as.numeric(as.character(Pressure))  
  )
# Fit Weibull inactivation model
weibull_model <- nlsLM(
  Response ~ a * exp(- (Pressure_numeric / b)^c),
  data = data_model,
  start = list(a = 5, b = 600, c = 1.5),  # Try adjusting these if it doesn't converge
  control = nls.control(maxiter = 200, warnOnly = TRUE)
)

summary(weibull_model)


# Add predicted values
data_model$Weibull_fit <- predict(weibull_model)

# Plot observed vs Weibull fit
ggplot(data_model, aes(x = Pressure_numeric, y = Response)) +
  geom_point(color = "blue") +
  geom_line(aes(y = Weibull_fit), color = "red", size = 1) +
  labs(title = "Weibull Model Fit",
       x = "Pressure (MPa)",
       y = "Response") +
  theme_minimal()

```

##Akaike Information Criterion

```{r}
aic_results <- AIC(lm_model, weibull_model)

aic_results
```



##ANOVA

```{r}
# Fit the ANOVA model
anova_model <- aov(Response ~ Pressure * Acid * pH * Organism, data = data)

anova_model
```

## EMMeans & Pairwise Comparisons

```{r}

# Main effects EMMs

emm <- emmeans(lm_model, ~ Pressure * Acid * pH )

emm


# Pairwise comparisons using Tukey HSD
pairwise_comparisons <- emmeans(anova_model, pairwise ~ Pressure * Acid *pH, adjust = "tukey")

# Display the pairwise comparisons result
summary(pairwise_comparisons)


```



##Plots

```{r}
# Estimated marginal means plot for Pressure
model <- aov(Response ~ Pressure * pH * Acid * Organism, data = Data)

emm_all <- bind_rows(
  as.data.frame(emmeans(model, ~ Pressure)) %>% mutate(Factor = "Pressure", Level = as.character(Pressure)),
  as.data.frame(emmeans(model, ~ pH)) %>% mutate(Factor = "pH", Level = as.character(pH)),
  as.data.frame(emmeans(model, ~ Acid)) %>% mutate(Factor = "Acid", Level = as.character(Acid)),
  as.data.frame(emmeans(model, ~ Organism)) %>% mutate(Factor = "Organism", Level = as.character(Organism))
)

ggplot(emm_all, aes(x = Level, y = emmean, fill = Factor)) +
  geom_col(position = position_dodge(width = 0.9), width = 0.6, show.legend = FALSE) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  facet_wrap(~ Factor, scales = "free_x") +
  labs(
    title = "Estimated Marginal Means of D-values",
    x = "Factor Levels",
    y = "Estimated Mean D-value"
  ) +
  theme_minimal(base_size = 13)



```

##Modeling

```{r}


# Weibull model (non-linear)
weibull_model <- nlsLM(
  Response ~ a * exp(- (Pressure / b)^c),
  data = data,
  start = list(a = 3, b = 600, c = 0.5)
)

```
Make sure to run a model that reflects your study design. Even if your study design does not include one of the designs covered in class, you are still expected to run the most appropriate model. If you need help for references, let me know.  

Before each chunk, describe the steps being performed in that chunk. For example, "Here I will load the data".  

If a chunk produces output, like printing a data frame, statistical summary, a plot, ANOVA table, etc., make sure to write text interpreting what you see and how you can/will use that information to move forward to the next steps in the workflow.  

# Team work in GitHub  
Whether you are working with your future-self or as duos, make sure to stage, commit, and push after finishing each of the sub-sections above. When committing, write commit messages that are short and descriptive (e.g., finished wrangling).  

If you are working in duos, make sure to split the workload. I will check your collaborative work through the commit history, and if one student has contributed significantly more than the other, than that will impact grades.  

**Tip 1**: to avoid merge conflicts, make `sure to **pull** first`, and then start working locally. That will ensure that any changes made by your partner will be "downloaded" before you make changes to the files locally.  

**Tip 2**: make use of the Issues on this repository to set up to-do lists and assign tasks to different people. You can also use each issue/task to discuss how things should be run and get to an agreement.  

# Submitting your work  
Once you have developed all the code and answers, make sure to Render this quarto file.  

**Notes on rendering**:  

- Make sure to render your work and inspect how the final html look like.  
- If it does not look professional for whatever reason, then fix the issue, re-render it, recheck.  
- Only send me your work once your html file looks professional.  
- Some potential issues you may encounter and how to fix them:   
  - Some times your code may be creating a table output that is waaay to long and cumbersome to scroll through when rendered. If this is the case, make it more professional looking by using the `head()` function to only print the first handful of rows (instead of thousands of rows).  
  
  - **DO NOT** delete the file's heading levels (# and ##). They set up the proper heading 1 and 2 levels, and I use them to guide my grading.  
  
  - If a given chunk is also outputting warnings or messages, inhibit this behavior by changing the chunk options `message` and `warning` to `FALSE`.  
  
  - If, after rendered, 2 lines of text are connected and you wish to "break line" between them, add 2 extra spaces after the first one.  

After rendering, an .html file will be created on your `code` folder.  

Rename this file to `LASTNAME1-LASTNAME2_finalproject.html`.    
For ex., `Bastos-Mendes_finalproject.html`.

Submit the html file on eLC by **April 30th** 11:59 pm.    













  

  

